{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","tbody","table","addEventListener","e","item","target","closest","index","cellIndex","sortedArray","direction","rows","sort","a","b","aValue","cells","innerText","replace","bValue","isNaN","localeCompare","append","stopPropagation","row","rowActive","classList","remove","add","pushNotification","title","description","type","boxMessage","createElement","titleMessage","descriptionMessage","dataset","qa","textContent","setTimeout","insertAdjacentHTML","form","addTableEditing","tableEmployee","tBodies","event","preventDefault","tagName","modifiedCell","cellText","cellInputWidth","window","getComputedStyle","width","innerHTML","cellInput","style","maxWidth","value","key","formData","FormData","tr","formDataArray","get","length","i","td","num","parseInt","toLocaleString","reset"],"mappings":"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","file":"main.d216c590.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst tbody = document.querySelector('tbody');\nconst table = document.querySelector('table');\n\ntable.addEventListener('click', e => {\n  const item = e.target.closest('th');\n  const index = item.cellIndex;\n  let sortedArray = [];\n\n  if (item.direction === 'ASC') {\n    item.direction = 'DESC';\n\n    sortedArray = [...tbody.rows].sort((a, b) => {\n      const aValue = a.cells[index].innerText.replace(/[$,]/g, '');\n      const bValue = b.cells[index].innerText.replace(/[$,]/g, '');\n\n      if (isNaN(aValue)) {\n        return aValue.localeCompare(bValue);\n      } else {\n        return aValue - bValue;\n      };\n    });\n  } else {\n    item.direction = 'ASC';\n\n    sortedArray = [...tbody.rows].sort((a, b) => {\n      const aValue = a.cells[index].innerText.replace(/[$,]/g, '');\n      const bValue = b.cells[index].innerText.replace(/[$,]/g, '');\n\n      if (isNaN(aValue)) {\n        return bValue.localeCompare(aValue);\n      } else {\n        return bValue - aValue;\n      };\n    });\n  }\n\n  tbody.append(...sortedArray);\n});\n\ntbody.addEventListener('click', e => {\n  e.stopPropagation();\n\n  const row = e.target.closest('tr');\n  const rowActive = document.querySelector('.active');\n\n  if (!rowActive) {\n    row.classList.add('active');\n  } else {\n    rowActive.classList.remove('active');\n    row.classList.add('active');\n  }\n});\n\nconst pushNotification = (title, description, type) => {\n  const boxMessage = document.createElement('div');\n  const titleMessage = document.createElement('h1');\n  const descriptionMessage = document.createElement('p');\n\n  boxMessage.classList = 'notification';\n  boxMessage.dataset.qa = 'notification';\n  boxMessage.classList.add(type);\n  titleMessage.classList = 'title';\n  titleMessage.textContent = title;\n  descriptionMessage.textContent = description;\n  boxMessage.append(titleMessage);\n  boxMessage.append(descriptionMessage);\n\n  body.append(boxMessage);\n\n  setTimeout(() => {\n    boxMessage.remove();\n  }, 2000);\n};\n\nbody.insertAdjacentHTML('beforeend',\n  `<form class=\"new-employee-form\">\n      <label>Name:\n        <input name=\"name\" type=\"text\" data-qa=\"name\">\n      </label>\n      <label>Position:\n        <input name=\"position\" type=\"text\" data-qa=\"position\">\n      </label>\n      <label> Office:\n        <select name=\"office\" data-qa=\"office\" >\n         <option value=\"Tokyo\">Tokyo</option>\n         <option value=\"Singapore\">Singapore</option>\n         <option value=\"London\">London</option>\n         <option value=\"New York\">New York</option>\n         <option value=\"Edinburgh\">Edinburgh</option>\n         <option value=\"San Francisco\">San Francisco</option>\n        </select>\n      </label>\n      <label>Age:\n        <input name=\"age\" type=\"number\" data-qa=\"age\">\n      </label>\n      <label>Salary:\n        <input name=\"salary\" type=\"number\" data-qa=\"salary\">\n      </label>\n      <button>Save to table</button>\n     </form>`\n);\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n  const tr = document.createElement('tr');\n\n  const formDataArray = [\n    formData.get('name'),\n    formData.get('position'),\n    formData.get('office'),\n    formData.get('age'),\n    formData.get('salary'),\n  ];\n\n  if (formData.get('name').length < 4) {\n    pushNotification('Wrong!',\n      'Name should have at least 4 letters!',\n      'error');\n\n    return;\n  }\n\n  if (!formData.get('name') || !formData.get('position')\n    || !formData.get('age') || !formData.get('salary')) {\n    pushNotification('Wrong!',\n      'Please, fill in all fields',\n      'error');\n\n    return;\n  }\n\n  if (formData.get('age') < 18 || formData.get('age') > 90) {\n    pushNotification('Wrong!',\n      'Age must be between 18 and 90',\n      'error');\n\n    return;\n  }\n\n  for (let i = 0; i < formDataArray.length; i++) {\n    const td = document.createElement('td');\n\n    if (i === formDataArray.length - 1) {\n      const num = parseInt(formDataArray[i]);\n\n      td.textContent = `$${num.toLocaleString('en-US')}`;\n    } else {\n      td.textContent = formDataArray[i];\n    }\n\n    tr.append(td);\n  }\n\n  tbody.append(tr);\n\n  pushNotification('Done!',\n    'New employee added to table', 'success');\n\n  form.reset();\n});\n\nfunction addTableEditing(tableEmployee) {\n  tableEmployee.tBodies[0].addEventListener('dblclick', (event) => {\n    event.preventDefault();\n\n    if (event.target.tagName !== 'TD') {\n      return;\n    }\n\n    const modifiedCell = event.target;\n    const cellText = modifiedCell.textContent;\n    const cellInputWidth = window.getComputedStyle(modifiedCell).width;\n\n    modifiedCell.innerHTML = `\n      <input\n        name=\"change\"\n        class=\"cell-input\"\n        value=\"${cellText}\"\n      >\n    `;\n\n    const cellInput = modifiedCell.querySelector('.cell-input');\n\n    cellInput.style.maxWidth = cellInputWidth;\n\n    cellInput.addEventListener('blur', (e) => {\n      modifiedCell.innerHTML = cellInput.value\n        ? cellInput.value\n        : cellText;\n    });\n\n    cellInput.addEventListener('keypress', (e) => {\n      if (e.key !== 'Enter') {\n        return;\n      }\n\n      modifiedCell.innerHTML = cellInput.value\n        ? cellInput.value\n        : cellText;\n    });\n  });\n}\n\naddTableEditing(table);\n"]}